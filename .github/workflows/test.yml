name: test

on:
  push:
    branches:
      - '*'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - 'master'

jobs:
  test_unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php: '7.1'
            symfony: '3.4.*'
          - php: '7.4'
            symfony: '3.4.*'
          - php: '7.2'
            symfony: '4.4.*'
          - php: '7.4'
            symfony: '4.4.*'
          - php: '7.2'
            symfony: '5.1.*'
          - php: '7.4'
            symfony: '5.1.*'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup php
        uses: nanasess/setup-php@v3.0.6
        with:
          php-version: ${{ matrix.php }}
      - name: prepare test environment
        run: |
          Tests/Functional/Scripts/downloadComposer.sh
          composer config extra.symfony.require "${{ matrix.symfony }}"
          composer config extra.symfony.allow-contrib true
          # adds flex, suppress composer.lock
          composer require symfony/flex --no-update
          # create a lock file
          composer install
          # updates to SYMFONY_VERSION, but runs recipes
          composer update symfony/*
          # reset tracked files
          git reset --hard
          # clean up recipe generated files and folders
          git clean -df
      - name: execute unit tests
        run: composer run-script quality
      - name: upload coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: php vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v

  test_functional:
    name: Functional Tests
    needs:
      - test_unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        symfony:
          - '3.4.*'
          - '4.4.*'
          - '5.1.*'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup php
        uses: nanasess/setup-php@v3.0.6
        with:
          php-version: '7.4'
      - name: prepare test environment
        run: |
          Tests/Functional/Scripts/downloadComposer.sh
          composer config extra.symfony.require "${{ matrix.symfony }}"
          composer config extra.symfony.allow-contrib true
          # adds flex, suppress composer.lock
          composer require symfony/flex --no-update
          # create a lock file
          composer install
          # updates to SYMFONY_VERSION, but runs recipes
          composer update symfony/*
          # reset tracked files
          git reset --hard
          # clean up recipe generated files and folders
          git clean -df
      - name: install symfony cli
        run: |
          wget https://get.symfony.com/cli/installer -O - | bash
          sudo mv ~/.symfony/bin/symfony /usr/local/bin/symfony
      - name: execute functional tests
        if: ${{ matrix.symfony == '3.4.*' }}
        env:
          SYMFONY_VERSION: ${{ matrix.symfony }}
        run: composer run-script phpunit-functional-sf3
      - name: execute functional tests
        if: ${{ matrix.symfony != '3.4.*' }}
        env:
          SYMFONY_VERSION: ${{ matrix.symfony }}
        run: composer run-script phpunit-functional
      - name: show running containers
        run: docker ps
